apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service-http
spec:
#  type: LoadBalancer  # You can also use 'NodePort' or 'ClusterIP' based on your requirements
#  loadBalancerIP: 10.200.0.5
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-01
  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  labels:
    app: nginx
spec:
  ingressClassName: nginx
  rules:
  - host: jamhub.online
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: nginx-service-http
            port: 
              number: 80
  - host: nginx.jamhub.online
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: nginx-service-http
            port:
              number: 80
  tls:
  - hosts:
    - jamhub.online
    - nginx.jamhub.online
    secretName: nginx-jam-com-au-tls

#---
#apiVersion: cert-manager.io/v1
#kind: Certificate
#metadata:
#  name: nginx-jam-com-au
#  namespace: default
#spec:
#  secretName: nginx-jam-com-au-tls
#  issuerRef:
#    name: letsencrypt-prod
#    kind: ClusterIssuer
#  commonName: nginx.jamhub.online
#  dnsNames:
#  - '*.jamhub.online'
#  - jamhub.online

